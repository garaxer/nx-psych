todo:
1. Connect and read from db'
2. auth

Commands ran so far:
npx nx init
nx g @nrwl/next:app
nx g @nrwl/react:lib ui
nx g @nrwl/react:component button --project ui

yarn add --dev @nrwl/storybook
nx g @nrwl/react:storybook-configuration ui
nx run ui:storybook

nx run api:serve
nx run app:serve
nx run psych:serve

Together you can just run x run

nx g @nrwl/node:lib shared-types
nx g @nrwl/react:app psych


github actions multistage,

docker build -t psych1 .
docker images
docker run  -it -p 3000:3000 -p 3001:3333 96f4e41429db


todo
Add authenticaiton (use that mfe app)
Add nextjs server rendering



Deploying front end to vercel
npx nx build app -- prod
dist/apps/apps/.next

Notes:
https://nx.dev/guides/deploy-nextjs-to-vercel
https://www.youtube.com/watch?v=WOfL5q2HznI
https://github.com/ejazahm3d/fullstack-turborepo-starter/tree/master/apps/api
https://www.cshelton.co.uk/skills-and-experience
https://github.com/jherr/nextjs-pokemon-modes

express api:
https://github.com/jherr/nx-with-exp-nextjs/tree/master/apps/api




npm run all

anytime you change the backend types, re run openapi


TODO:
auth
create service
view service
attend service - seperate react micro ui, use the psych folder, much like the restaurant booking api